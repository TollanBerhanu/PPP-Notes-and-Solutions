# This script (list of commands) sends funds(Ada) to a gift address using the script smart contract we defined
#!/bin/bash

assets=/workspace/code/Week02/assets
keypath=/workspace/keys
name="$1"   # name of sender (e.g., alice, bob)
txin="$2"   # some UTxO in the sender's wallet that is provided as i/p to the txn. (For txn fee and gift amount)
body="$assets/gift.txbody"
tx="$assets/gift.tx"

# Build gift address ... this command generates an address for our serialized script/smart contract (gift.plutus)
cardano-cli address build \
    --payment-script-file "$assets/gift.plutus" \ 
    --testnet-magic 2 \
    --out-file "$assets/gift.addr"
    # we give it a serialized script file (e.g., gift.plutus)
    # we specify the network (e.g., testnet-magic 2 -> preview testnet)
    # we specify the file/location where the resulting address should be written

# Build the transaction ... our next step is to build our transaction. We have 2 options: 
    # using the transaction raw command (we have more control but more manual configuration required)
    # using transaction build (higher-level command ... more automated)
cardano-cli transaction build \
    --babbage-era \
    --testnet-magic 2 \
    --tx-in "$txin" \
    --tx-out "$(cat "$assets/gift.addr") + 3000000 lovelace" \
    --tx-out-inline-datum-file "$assets/unit.json" \
    --change-address "$(cat "$keypath/$name.addr")" \
    --out-file "$body"
    # specify the era (currnent era is babbage ... Apr 6 2023)
    # specify the network (preview testnet)
    # specify the i/p(s) of the txn (UTxOs)
    # specify the o/p(s) of the txn ... the script address we send to + the amount of lovelace we send
    # attach a datum (just attach any datum ... in this case the datum is Data.unit () and it will be completely ignored)
        # there are 3 ways of attaching datum: - attach the hash of the datum to the o/p
        #                                      - attach the hash to the o/p and the original datum to the txn
        #                                   (*)- attach the datum directly to the o/p (inline-datum)
    # specify the change address (the address where all remaining funds/ada (i/p_fund - (txn_fee + gift_amount) will be transfered to)
    # specify an o/p file where the (txn body) generated by this command is written to

# Sign the transaction ... next, we have to sign the generated txn_body to verify our identity
cardano-cli transaction sign \
    --tx-body-file "$body" \
    --signing-key-file "$keypath/$name.skey" \
    --testnet-magic 2 \
    --out-file "$tx"
    # specify where the generated txn body is
    # specify where our private key is located
    # specify the network
    # specify the file where the signed txn will be stored

# Submit the transaction ... this command will submit the signed txn
cardano-cli transaction submit \
    --testnet-magic 2 \
    --tx-file "$tx"
    # specify the network
    # specify where the txn file is stored

# this command (transaction txid) is used to get the txn hash after we give it the txn_file
tid=$(cardano-cli transaction txid --tx-file "$tx")
echo "transaction id: $tid"
echo "Cardanoscan: https://preview.cardanoscan.io/transaction/$tid" 
# we can look at our txn using the txn_hash in the blockchain explorer (e.g., cardano scan)
# normally, our transaction will not be displayed for 20 sec because that's the time it takes for a block to be created in cardano